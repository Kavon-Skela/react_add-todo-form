{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","completed","cn","TodoList","todos","map","username","getUserById","usersFromServer","find","userId","App","useState","visibleTodos","setTodos","isSelectedUserError","setSelectionError","isTitleError","setTitleError","setTitle","setUserId","action","method","onSubmit","event","preventDefault","biggerId","Math","max","exactlyUser","formattedTitle","trim","newTodo","htmlFor","type","placeholder","value","onChange","target","replace","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d8b1d08.chunk.js","sourcesContent":["import { FC } from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport './TodoInfo.scss';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    user,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { ChangeEvent, FC, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(id: number):User | null {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n}\n\nfunction finderBiggestId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id));\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [visibleTodos, setTodos] = useState(todos);\n  const [isSelectedUserError, setSelectionError] = useState(false);\n  const [isTitleError, setTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const handlerTitleChange = (\n    event: ChangeEvent<HTMLInputElement>,\n  ) => {\n    const formattedTitle = event.target.value.replace(\n      /[^a-zA-Zа-яА-Я0-9\\s]/g, '',\n    );\n\n    if (formattedTitle) {\n      setTitle(formattedTitle);\n      setTitleError(false);\n    }\n  };\n\n  const submitHandler = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    const biggerId = finderBiggestId(visibleTodos);\n    const exactlyUser = getUserById(userId);\n    const formattedTitle = title.trim();\n\n    if (!formattedTitle) {\n      setTitleError(true);\n    }\n\n    if (!exactlyUser) {\n      setSelectionError(true);\n    }\n\n    if (!formattedTitle || !exactlyUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: biggerId + 1,\n      title: formattedTitle,\n      completed: false,\n      userId: exactlyUser.id,\n      user: exactlyUser,\n    };\n\n    setTodos([...visibleTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSelectionChange = (event: { target: { value: string; }; }) => {\n    const { value } = event.target;\n\n    if (value) {\n      setUserId(Number(value));\n      setSelectionError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title-input\">\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              id=\"title-input\"\n              value={title}\n              onChange={handlerTitleChange}\n            />\n          </label>\n\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelection\">\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              id=\"userSelection\"\n              onChange={handleSelectionChange}\n            >\n              <option value=\"0\">Choose a user</option>\n              {usersFromServer.map(({ id, name }) => {\n                return (\n                  <option key={id} value={id}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {isSelectedUserError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}